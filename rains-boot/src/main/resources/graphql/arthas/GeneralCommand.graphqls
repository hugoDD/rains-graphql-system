type General{
	key: String
	value: String
}
type Method {
	declaringClass:String
	methodName:String
	modifier:String
	annotation:String
	parameters:[String]
	returnObj:String
	exceptions:String
	classLoaderHash:String
}
type Bean {
	name:String
	simpleName:String
	detail: String
	methods:[Method]
	methodSign:[String]
}

type LoggerBean {
	 name:String
	 level:[LoggerLevel]
}

type LoggerLevel {
	configuredLevel:String
	effectiveLevel:String
	instanceId:String
}

type MBean {
	mBeanPre: String
	mBeanSuffix: [String]
}

extend type Query{
	mbeanCommand(machineId:Long ,cmd:String): [MBean]
	generalCommand(machineId:Long ,cmd:String): [General]
	scCommand(machineId:Long ,cmd:String): [Bean]
	loggerCommand(machineId:Long ,cmd:String): [LoggerBean]
	threadInfo(machineId:Long ,cmd:String): [TheadInfo]
}

extend type Mutation {
	postCommand(machineId:Long ,cmd:String): [General]
}
