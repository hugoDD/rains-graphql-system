type Roles {
	data: [Role!]!
	total: Int
}

type Role {
	roleId: ID
	roleName: String
	roleKey: String
	roleSort: Int
	dataScope: String
	status: String
	delFlag: String
	createBy: String
	createTime: Date
	modifyBy: String
	modifyTime: Date
	menuIds:[Long]
	menus:[Menu]
	deptIds:[Long]
	depts:[Dept]
	remark:String

}
input RoleCondition {
	roleId: ID
	roleName: String
	remark: String
	createTime: Date
	modifyTime: Date
	createTimeFrom:String
	createTimeTo:String
	menuIds: [String]
}


extend type Query {
	#获取角色详细信息
	roleDetail(roleName: String!): Role
	#获取角色分页
	rolePage(page: QueryRequest,role: RoleCondition): Roles
	#获取角色分页
	rolePageQuery(page: QueryRequest): Roles

}

extend type Mutation {
	roleBaseMutation(page: QueryRequest):Boolean
	#增加角色
	addRole(role: RoleCondition): Role
	#更新角色属性与用户关系、菜单关系
	updateRole(role: RoleCondition): Role
	#删除用户
	deleteRoles(roleIds: [String!]!): Boolean
	roleExport(page: QueryRequest,role: RoleCondition):Boolean

}
