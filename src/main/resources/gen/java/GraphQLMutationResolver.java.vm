package ${packageName}.mutation;


import ${packageName}.domain.${ClassName};
import ${basePackage}.service.I${ClassName}Service;
import com.coxautodev.graphql.tools.GraphQLMutationResolver;
import com.rains.graphql.common.annotation.Log;
import com.rains.graphql.common.domain.QueryRequest;
import com.rains.graphql.system.mutation.BaseMutation;
import graphql.schema.DataFetchingEnvironment;
import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * ${functionName} Mutation
 *szzd
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@Component
public class ${ClassName}Mutation implements GraphQLMutationResolver {
    @Autowired
    private BaseMutation mutation;

    @Autowired
    private I${ClassName}Service ${className}Service;

    private Consumer<QueryRequest> exportOpt;

    @Log("[#request.opt]操作系统日志")
    @RequiresPermissions("${moduleName}:${className}:[#request.opt]")
    public boolean ${className}BaseMutation(QueryRequest request, DataFetchingEnvironment env) {
        if(exportOpt==null){
            exportOpt = q -> genTableService.export(q, env);
            request.opt("importTable",importTable);
        }

        return ${className}Service.baseOpt(request);
    }
}
